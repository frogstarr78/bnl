module Bnl
	grammar Dsl

		rule sentence
      fragment conjoined_fragments:(conjunction fragment)* period {
        def fragments
          [fragment] + conjoined_fragments.elements.collect {|frag| frag.fragment }
        end
      }
    end

		rule fragment
      verb space article? noun space temporal <ActionItem>
		end

		rule verb
			( 
       'begin' / 'Begin' / 
			'start' / 'Start' /
			'restart' / 'Restart' /
			'cease' / 'Cease' /
			'end' / 'End' / 
      'create' / 'Create'
      ) <OrmMethods>
		end

		rule noun
			 ( !space . )+ <OrmModel>
		end

    rule article
      ( definite_articles / indefinite_articles  ) space ( !space . )+ space <Klass>
    end

    rule definite_articles
      'the'
    end

    rule indefinite_articles
      ( 'an' / 'a' ) ( space consonant_adjectives )? 
    end

    rule consonant_adjectives
      'new'
    end

    rule vowel_adjectives
      !space
    end

		rule temporal
      preposition space literal <TemporalValue>
		end

    rule literal
      ( !meaningless_conjunction !conjunction !period . )+
    end

		rule preposition
			'on' / 'at'
		end

    rule conjunction
      continuation 
    end

		rule continuation
			( space 'and' / comma space 'and' / comma ) space
		end

    rule meaningless_conjunction
      'or'
    end

		rule space
			' '
		end

    rule comma
      ','
    end

    rule period
      '.'
    end
	end
end
